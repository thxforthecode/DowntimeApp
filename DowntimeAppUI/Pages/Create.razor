@page "/Create"
@attribute [Authorize]
@using DowntimeAppUI.Components
@using DowntimeAppUI.Models

@inject AuthenticationStateProvider authProvider
@inject IMachineData machineData
@inject IUserData userData
@inject IReportData reportData
@inject NavigationManager navManager


<h1 class="page-heading text-uppercase mb-4">Create a Report</h1>

<div class="row justify-content-center create-form">
    <div class="col-xl-8 col-lg-10 form-layout">
        <div class="close-button-section">
            <button class="btn btn-close" @onclick="ClosePage"></button>
        </div>
        @if(machines != null)
        {
            <EditForm Model="report" OnValidSubmit="CreateReport">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="input-section">
                    <label class="form-label fw-bold text-uppercase" for="issue-text">Report</label>
                    <div class="input-description">What happened to your machine?</div>
                    <InputTextArea class="form-control" id="issue-text" @bind-Value="report.Issue" />
                </div>
                <div class="input-section">
                    <label class="form-label fw-bold text-uppercase" for="machine">Machine</label>
                    <div class="input-description">Choose your machine</div>
                    <div class="col-lg-8">
                        <MyInputRadioGroup id="machine" @bind-Value="report.MachineId">
                            @foreach (var m in machines)
                            {
                                <div class="radio-item-group">
                                    <InputRadio Value="m.MachineId" id="@m.MachineId" />
                                    <label for="@m.MachineId">@m.MachineName - @m.MachineDept</label>
                                </div>
                            }
                        </MyInputRadioGroup>
                    </div>
                </div>
                <div class="input-section">
                    <label class="form-label fw-bold text-uppercase" for="solution-text">Report</label>
                    <div class="input-description">What solved or helped the problem with your machine?</div>
                    <InputTextArea class="form-control" id="solution-text" @bind-Value="report.Solution" />
                </div>
                <div class="center-children">
                    <button class="btn btn-main btn-lg text-uppercase" type="submit">Create Report</button>
                </div>


            </EditForm>
        }
        
    </div>
</div>


@code {
    private CreateReportModel report = new();
    private List<MachineModel> machines;
    private UserModel loggedInUser;

    protected async override Task OnInitializedAsync()
    {
        machines = await machineData.GetAllMachines();

        loggedInUser = await authProvider.GetUserFromAuth(userData);
    }

    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }

    private async Task CreateReport()
    {
        ReportModel r = new();
        r.Issue = report.Issue;
        r.Solution = report.Solution;
        r.Author = new BasicUserModel(loggedInUser);
        r.Machine = machines.Where(m => m.MachineId == report.MachineId).First();

        if(r.Machine == null)
        {
            report.MachineId = "";
            return;
        }

        await reportData.CreateReport(r);
        report = new();
        ClosePage();
    }

}
