@page "/SampleData"
@inject IMachineData machineData
@inject IReportData reportData
@inject IUserData userData
@inject IPartData partData


<h3>Sample Data</h3>
@if (machinesCreated)
{
    <h4>Sample Machines Created</h4>
}
else
{
    <button class=" btn btn-primary " @onclick="CreateMachines">Create Machines</button>
    <button class=" btn btn-primary " @onclick="CreateSampleUser">Create users</button>
    <button class=" btn btn-primary " @onclick="CreateSampleReports">Create Reports</button>
    <button class=" btn btn-primary " @onclick="CreateSampleParts">Create Parts</button>



}

@code {

    private async Task CreateSampleParts()
    {
        var thang = new List<BasicMachineModel>();
        thang.Add(new BasicMachineModel(await machineData.GetMachineByName("8719")));
        PartModel part = new()
            {
                Description = "test",
                Name = "test part 1",
                SerialNumber = "yert",
                Supplier = "no one fucking knows",
                Machines = thang,

            };

        await partData.CreatePart(part);
    }
    private bool machinesCreated = false;
    private async Task CreateMachines()
    {
        var machines = await machineData.GetAllMachines();
        // if (machines?.Count > 0)
        // {
        //     return;
        // }
        var thang = new List<BasicPartModel>();
        thang.Add(new BasicPartModel(await partData.GetPart("test part 1")));

        MachineModel machine = new()
            {
                MachineName = "8719",
                MachineDept = "Department 369",
                MachineDescription = "This is a test machine",
                PartsList = thang,

            };
        await machineData.CreateMachines(machine);
        machine = new()
            {
                MachineName = "8720",
                MachineDept = "Department 369",
                MachineDescription = "This is a test machine but less so iykwim",

            };
        await machineData.CreateMachines(machine);


    }

    private async Task CreateSampleUser()
    {
        UserModel Jerry = new()
            {

                ObjectIdentifier = "thang",
                FirstName = "Jerry",
                LastName = "jankerson",
                Email = "Yerrymail",
                AuthoredReports = { },
                SavedReports = { }
            };
        await userData.CreateUser(Jerry);
    }

    private async Task CreateSampleReports()
    {
        var reports = await reportData.GetAllReports();

        if (reports?.Count > 0)
        {
            return;
        }
        ReportModel report = new()
            {

                Issue = "Test Issue",   
                Solution = "operator error",
                DowntimeAmount = 55,
                Machine = new BasicMachineModel(await machineData.GetMachineByName("8719")),
                Author = new BasicUserModel(await userData.GetUser("66a0ee877b66fed7f064822c")),
                WhenCreated = DateTime.Now,
                UserSaves = { },
                Status = false,
                Archived = false
            };
        await reportData.CreateReport(report);
        machinesCreated = true;

}
}