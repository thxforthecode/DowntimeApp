@page "/Details/{Id}"

@inject IReportData reportData
@inject NavigationManager navManager
@inject AuthenticationStateProvider authProvider
@inject IUserData userData


<h1>Report Details</h1>

<div>
    <div>
        @if(report is not null)
        {
            <div>
                <div>
                    <div @onclick="SaveReport">
                       <div>@GetUserSaveText()</div>
                       <span class="oi oi-caret-top"></span>                       
                    </div>
                    <div>
                        <div>@report.WhenCreated.ToString("MM.dd.yyyy")</div>
                    </div>
                   
                </div>
                <div>
                    <div>@report.Machine.MachineName</div>
                    <div>@report.Author.FirstName</div>
                    <div>@report.Author.LastName</div>
                    <div>@report.Issue</div>
                    <div>@report.Solution</div>
                </div>
                <div>
                    <button @onclick="ClosePage"></button>
                </div>

            </div>
        }
    </div>
</div>



@code {
    [Parameter]
    public string Id { get; set; }

    private ReportModel report;
    private UserModel loggedInUser;


    protected async override Task OnInitializedAsync()
    {
        report = await reportData.GetReport(Id);
        loggedInUser = await authProvider.GetUserFromAuth(userData);
    }

    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }

    private string GetUserSaveText()
    {
        //may need to change text here, this is copied from index.razor
        if (report.UserSaves.Count > 0)
        {
            return $"{report.UserSaves.Count.ToString("00")} Saves!";
        }
        else
        {
            if (report.Author.Id == loggedInUser?.Id)
            {
                return "Awaiting Saves";
            }
            else
            {
                return "Click to Save";
            }
        }
    }
    private async Task SaveReport()
    {
        if (loggedInUser is not null)
        {
            if (report.Author.Id == loggedInUser.Id)
            {
                return;
            }
            //removes this user from report saves if theyre already there(unsave)
            if (report.UserSaves.Add(loggedInUser.Id) == false)
            {
                report.UserSaves.Remove(loggedInUser.Id);
            }

            await reportData.UserSaveReport(report.Id, loggedInUser.Id);

        }
        else
        {
            navManager.NavigateTo("/MicrosoftIdentity/Account/SignIn", true);
        }
    }
}
